
/*
Flatbuffers schema for use in cellxgene.

Currently the only supported wire format is a 2D matrix.  May expand
in the future to others.

https://github.com/google/flatbuffers
http://google.github.io/flatbuffers/

NOTE: IF YOU MODIFY THIS FILE, YOU MUST RECOMPILE AND COMMIT
RESULTING FBS ACCESS CODE TO THE REPO.   See:
* server/app/util/fbs
* client/src/util/stateManager/
*/

namespace NetEncoding;

table Float32Array {
  data: [float32];
}

table Uint32Array {
  data: [uint32];
}

table Int32Array {
  data: [int32];
}

table Float64Array {
  data: [float64];
}

table JSONEncodedArray {
  // contains a UTF-8/JSON encoded array.  Used to store other
  // types (or polymorphic arrays)
  data: [uint8];
}

union TypedArray {
  Float32Array,
  Int32Array,
  Uint32Array,
  Float64Array,
  JSONEncodedArray
}

// Extra level of indirection required because vector of union not yet supported
table Column {
  u: TypedArray;
}

// 2D matrix stored in columnar layout
//
table DataFrame {
  n_rows: uint32;     // all columns have this length
  n_cols: uint32;     // same as columns.length
  columns: [Column];  // length n_cols

  // optional row and column index, with same length as corresponding dimension.
  // If null, defaults numeric index, ie, [0, n_rows) or [0, n_cols)
  col_index: TypedArray;
  row_index: TypedArray;
}

root_type DataFrame;
