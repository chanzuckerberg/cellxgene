
/*
Flatbuffers schema for use in cellxgene.

Currently the only supported wire format is a 2D matrix.  May expand
in the future to others.

https://github.com/google/flatbuffers
http://google.github.io/flatbuffers/
*/

namespace NetEncoding;

table Float32Array {
  data: [float32];
}

table Uint32Array {
  data: [uint32];
}

table Int32Array {
  data: [int32];
}

table Float64Array {
  data: [float64];
}

union ColumnUnion {
  Float32Array,
  Int32Array,
  Uint32Array,
  Float64Array
  // TODO add other types
}

// Extra level of indirection required because vector of union not yet supported
table Column {
  u: ColumnUnion;
}

// 2D matrix stored in columnar layout.
//
table Matrix {
  n_rows: uint32;     // all columns have this length
  n_cols: uint32;     // same as columns.length
  columns: [Column];  // length n_cols

  // optional row and column index.  Length == n_cols
  // If null, defaults to [0, n_rows)
  col_index: [uint32];
  row_index: [uint32];
}

root_type Matrix;
